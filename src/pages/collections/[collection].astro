---
import IndexLayout from '@/layouts/IndexLayout.astro'
import PostList from '@/components/widgets/PostList.astro'
import Breadcrumbs from '@/components/ui/Breadcrumbs.astro'
import type { BreadcrumbItem } from '@/components/ui/Breadcrumbs.astro'
import { themeConfig } from '@/config'
import { getCollection } from 'astro:content'
import { getCollectionKeys, getContentConfig, type CollectionKey } from '@/collections.config'

export async function getStaticPaths() {
  const collectionKeys = getCollectionKeys()

  return collectionKeys.map((collection) => ({
    params: { collection },
    props: { collection }
  }))
}

const { collection } = Astro.props as { collection: CollectionKey }

// Get metadata from config
const config = getContentConfig(collection)

const posts = await getCollection(collection as any)
const filteredPosts = posts
  .filter((post: any) => !post.id.startsWith('_'))
  .sort((a: any, b: any) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

// Build breadcrumbs
const breadcrumbs: BreadcrumbItem[] = [
  { label: 'Home', href: '/' },
  { label: 'Collections', href: '/collections/' },
  { label: config.title }
]
---

<IndexLayout 
  title={config.title + ' - ' + themeConfig.site.title} 
  description={config.description}
  pageTitle={config.title}
>
  <main>
    <Breadcrumbs items={breadcrumbs} />
    <p class="collection-description">{config.description}</p>
    {filteredPosts.length > 0 ? (
      <PostList posts={filteredPosts as any} urlPrefix={`/collections/${collection}/`} />
    ) : (
      <p class="empty-message">No posts yet.</p>
    )}
  </main>
</IndexLayout>

<style>
  .collection-description {
    color: var(--text-secondary);
    opacity: 0.75;
    margin-bottom: 2rem;
    font-size: 1.1rem;
    line-height: 1.5;
  }
</style>
