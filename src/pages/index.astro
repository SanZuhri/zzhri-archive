---
import IndexLayout from '@/layouts/IndexLayout.astro'
import { themeConfig } from '@/config'
import { getCollection } from 'astro:content'
import { getCollections } from '@/collections.config'

// Get collection stats
const collections = getCollections()
const collectionsWithStats = await Promise.all(
  collections.map(async (col) => {
    const posts = await getCollection(col.key as any)
    const filteredPosts = posts.filter((post: any) => !post.id.startsWith('_'))
    const sortedPosts = filteredPosts.sort(
      (a: any, b: any) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
    )

    const lastPost = sortedPosts[0] as any
    const lastUpdated = lastPost?.data?.pubDate || null

    return {
      ...col,
      count: filteredPosts.length,
      lastUpdated
    }
  })
)

// Calculate total posts
const totalPosts = collectionsWithStats.reduce((sum, col) => sum + col.count, 0)

// Get relative time
function getRelativeTime(date: Date | null) {
  if (!date) return 'Never'

  const now = new Date()
  const diff = now.getTime() - date.getTime()
  const days = Math.floor(diff / (1000 * 60 * 60 * 24))

  if (days === 0) return 'Today'
  if (days === 1) return 'Yesterday'
  if (days < 7) return `${days} days ago`
  if (days < 30) return `${Math.floor(days / 7)} weeks ago`
  if (days < 365) return `${Math.floor(days / 30)} months ago`
  return `${Math.floor(days / 365)} years ago`
}
---

<IndexLayout title={themeConfig.site.title} description={themeConfig.site.description}>
  <main>
    <div class="intro">
      <h1>{themeConfig.site.author}</h1>

      <p class="bio">
        Personal archive of thoughts, ideas, and knowledge.
        {totalPosts} posts across {collectionsWithStats.length} collections.
      </p>

      <nav class="main-nav">
        <h2 class="nav-heading">Collections</h2>
        <ul class="nav-list">
          {
            collectionsWithStats.map((col) => (
              <li>
                <a href={col.listPage} class="nav-link">
                  <span class="nav-title">{col.title}</span>
                  <span class="nav-count">{col.count}</span>
                </a>
              </li>
            ))
          }
        </ul>

        <h2 class="nav-heading">More</h2>
        <ul class="nav-list">
          <li>
            <a href="/tags/" class="nav-link">
              <span class="nav-title">Tags</span>
            </a>
          </li>
          <li>
            <a href="/archive/" class="nav-link">
              <span class="nav-title">Archive</span>
            </a>
          </li>
          <li>
            <a href="/guide/" class="nav-link">
              <span class="nav-title">Guide</span>
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </main>
</IndexLayout>

<style>
  .intro {
    max-width: 100%;
  }

  h1 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    color: var(--text-primary);
  }

  .bio {
    margin: 0 0 2.5rem 0;
    color: var(--text-secondary);
    opacity: 0.75;
    line-height: 1.6;
  }

  /* Main Navigation */
  .main-nav {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .nav-heading {
    font-size: 0.875rem;
    font-weight: 500;
    margin: 0 0 0.5rem 0;
    color: var(--text-primary);
    opacity: 0.9;
  }

  .nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .nav-list li {
    position: relative;
  }

  .nav-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    text-decoration: none;
    color: var(--text-primary);
    transition: opacity 0.15s ease-out;
    border: none;
    outline: none;
  }

  .nav-link::before,
  .nav-link::after {
    display: none !important;
  }

  .nav-link:hover,
  .nav-link:focus {
    text-decoration: none;
    border: none;
  }

  @media (hover: hover) and (pointer: fine) {
    .nav-list:hover .nav-link {
      opacity: 0.4;
    }

    .nav-list:hover .nav-link:hover {
      opacity: 1;
    }
  }

  .nav-title {
    font-size: 1.125rem;
    font-weight: 400;
    line-height: 1.5;
  }

  .nav-count {
    font-size: 0.875rem;
    color: var(--text-secondary);
    opacity: 0.75;
    font-variant-numeric: tabular-nums;
    letter-spacing: var(--spacing-s);
  }

  /* Responsive */
  @media (max-width: 768px) {
    h1 {
      font-size: 1.375rem;
    }

    .bio {
      font-size: 0.9375rem;
      margin-bottom: 2rem;
    }

    .main-nav {
      gap: 1.75rem;
    }
  }
</style>
