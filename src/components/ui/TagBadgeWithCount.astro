---
interface Props {
  tag: string
  count?: number
  clickable?: boolean
}

const { tag, count, clickable = true } = Astro.props
---

{clickable ? (
  <a href={`/tags/${tag}/`} class="tag-badge">
    <span class="tag-name">{tag}</span>
    {count !== undefined && <span class="tag-count">{count}</span>}
  </a>
) : (
  <span class="tag-badge">
    <span class="tag-name">{tag}</span>
    {count !== undefined && <span class="tag-count">{count}</span>}
  </span>
)}

<style>
  .tag-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    padding: 0.125rem 0.5rem;
    font-size: 0.75rem;
    font-family: var(--sans);
    letter-spacing: 0.02em;
    color: var(--text-secondary);
    background-color: var(--bg-secondary);
    border: 1px solid var(--border);
    border-radius: 3px;
    text-decoration: none;
    transition: all 0.15s ease-out;
    white-space: nowrap;
  }

  a.tag-badge:hover {
    color: var(--text-primary);
    border-color: var(--text-tertiary);
    background-color: var(--bg-tertiary);
  }

  .tag-name {
    flex: 1;
  }

  .tag-count {
    font-size: 0.7rem;
    opacity: 0.6;
    font-variant-numeric: tabular-nums;
  }

  @media (max-width: 768px) {
    .tag-badge {
      font-size: 0.7rem;
      padding: 0.1rem 0.4rem;
      gap: 0.25rem;
    }

    .tag-count {
      font-size: 0.65rem;
    }
  }
</style>
